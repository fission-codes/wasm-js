{
  "name": "wasm",
  "version": "1.0.0",
  "description": "",
  "type": "module",
  "module": "dist/bundler/wasm.js",
  "types": "dist/nodejs/wasm.d.ts",
  "exports": {
    ".": {
      "workerd": "./dist/web/workerd.js",
      "browser": "./dist/bundler/wasm.js",
      "node": "./dist/nodejs/wasm.cjs",
      "default": "./dist/bundler/wasm.js",
      "types": "./dist/nodejs/wasm.d.ts"
    },
    "./nodejs": {
      "default": "./dist/nodejs/wasm.cjs",
      "types": "./dist/nodejs/wasm.d.ts"
    },
    "./web": {
      "default": "./dist/web/wasm.js",
      "types": "./dist/web/wasm.d.ts"
    },
    "./workerd": {
      "default": "./dist/web/workerd.js",
      "types": "./dist/web/wasm.d.ts"
    }
  },
  "files": [
    "dist"
  ],
  "scripts": {
    "build": "export PROFILE=dev && export TARGET_DIR=debug && pnpm run build:all",
    "release": "export PROFILE=release && export TARGET_DIR=release && pnpm run build:all",
    "build:all": "wireit",
    "clean": "wireit",
    "test": "wireit",
    "test:node": "wireit"
  },
  "wireit": {
    "compile": {
      "command": "cargo build --target wasm32-unknown-unknown --profile $PROFILE",
      "env": {
        "PROFILE": {
          "external": true
        }
      }
    },
    "opt": {
      "command": "wasm-opt -O4 target/wasm32-unknown-unknown/$TARGET_DIR/wasm.wasm -o target/wasm32-unknown-unknown/$TARGET_DIR/wasm.wasm",
      "env": {
        "TARGET_DIR": {
          "external": true
        }
      },
      "dependencies": [
        "compile"
      ]
    },
    "bindgen:bundler": {
      "command": "wasm-bindgen --weak-refs --target bundler --out-dir dist/bundler target/wasm32-unknown-unknown/$TARGET_DIR/wasm.wasm",
      "env": {
        "TARGET_DIR": {
          "external": true
        }
      },
      "dependencies": [
        "opt"
      ],
      "output": [
        "dist/bundler"
      ]
    },
    "bindgen:nodejs": {
      "command": "wasm-bindgen --weak-refs --target nodejs --out-dir dist/nodejs target/wasm32-unknown-unknown/$TARGET_DIR/wasm.wasm && move-file dist/nodejs/wasm.js dist/nodejs/wasm.cjs",
      "env": {
        "TARGET_DIR": {
          "external": true
        }
      },
      "dependencies": [
        "opt"
      ],
      "output": [
        "dist/nodejs"
      ]
    },
    "bindgen:web": {
      "command": "wasm-bindgen --weak-refs --target web --out-dir dist/web target/wasm32-unknown-unknown/$TARGET_DIR/wasm.wasm && cpy --flat src/workerd.js dist/web",
      "env": {
        "TARGET_DIR": {
          "external": true
        }
      },
      "dependencies": [
        "opt"
      ],
      "output": [
        "dist/web"
      ]
    },
    "bindgen:deno": {
      "command": "wasm-bindgen --weak-refs --target deno --out-dir dist/deno target/wasm32-unknown-unknown/$TARGET_DIR/wasm.wasm",
      "env": {
        "TARGET_DIR": {
          "external": true
        }
      },
      "dependencies": [
        "opt"
      ],
      "output": [
        "dist/deno"
      ]
    },
    "build:all": {
      "dependencies": [
        "bindgen:bundler",
        "bindgen:nodejs",
        "bindgen:web",
        "bindgen:deno"
      ]
    },
    "clean": {
      "command": "rimraf dist"
    },
    "test:browser": {
      "command": "pw-test",
      "dependencies": [
        "build"
      ]
    },
    "test:node": {
      "command": "pw-test  --mode node ",
      "dependencies": [
        "build"
      ]
    },
    "test": {
      "dependencies": [
        "test:browser",
        "test:node"
      ]
    }
  },
  "keywords": [],
  "author": "",
  "license": "MIT",
  "devDependencies": {
    "@types/assert": "^1.5.6",
    "@types/mocha": "^10.0.1",
    "assert": "^2.0.0",
    "cpy-cli": "^5.0.0",
    "cross-env": "^7.0.3",
    "mocha": "^10.2.0",
    "move-file-cli": "^3.0.0",
    "nyc": "^15.1.0",
    "playwright-test": "^12.1.2",
    "rimraf": "^5.0.1",
    "typescript": "^5.1.6",
    "wireit": "^0.10.0"
  },
  "eslintConfig": {
    "extends": [
      "../../node_modules/hd-scripts/eslint/index.js"
    ],
    "parserOptions": {
      "project": "./tsconfig.json"
    },
    "env": {
      "mocha": true
    },
    "ignorePatterns": [
      "dist"
    ]
  }
}
